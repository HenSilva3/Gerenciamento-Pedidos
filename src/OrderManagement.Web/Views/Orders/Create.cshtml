@{
    ViewData["Title"] = "Create Order";
}

<h1>Create New Order</h1>
<hr />

<form id="create-order-form">
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6 form-group mb-3">
            <label for="ClientId" class="control-label">Client</label>
            <select id="ClientId" name="ClientId" class="form-control" asp-items="@ViewBag.Clients" required>
                <option value="">-- Select a Client --</option>
            </select>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            Add Products to Order
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-5">
                    <label>Search Product</label>
                    <input type="text" id="product-search" class="form-control" placeholder="Type product name...">
                    <div id="product-suggestions" class="list-group"></div>
                </div>
                <div class="col-md-2">
                    <label>Quantity</label>
                    <input type="number" id="product-quantity" class="form-control" value="1" min="1">
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="button" id="add-product-btn" class="btn btn-secondary">Add Product</button>
                </div>
            </div>
        </div>
    </div>

    <h3>Order Items</h3>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="order-items-table">
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3" class="text-right"><strong>Total</strong></td>
                <td id="order-total">R$ 0,00</td>
                <td></td>
            </tr>
        </tfoot>
    </table>

    <div class="form-group mt-4">
        <button type="submit" class="btn btn-success">Save Order</button>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

<template id="order-item-template">
    <tr>
        <td data-label="Product"></td>
        <td data-label="Quantity"></td>
        <td data-label="Unit Price"></td>
        <td data-label="Subtotal"></td>
        <td><button type="button" class="btn btn-danger btn-sm remove-item-btn">Remove</button></td>
    </tr>
</template>

@section Scripts {
    <script>
        $(document).ready(function () {
            let selectedProduct = null;

            $('#product-search').on('keyup', function () {
                let term = $(this).val();
                if (term.length < 2) {
                    $('#product-suggestions').empty().hide();
                    return;
                }

                $.ajax({
                    url: '@Url.Action("SearchProducts")',
                    data: { term: term },
                    success: function (data) {
                        let suggestions = $('#product-suggestions');
                        suggestions.empty().show();
                        $.each(data, function (i, product) {
                            let item = $('<a href="#" class="list-group-item list-group-item-action"></a>');
                            item.text(product.name + ' (Estoque: ' + product.stock + ')');
                            item.data('product', product);
                            suggestions.append(item);
                        });
                    }
                });
            });

            $(document).on('click', '#product-suggestions .list-group-item', function (e) {
                e.preventDefault();
                selectedProduct = $(this).data('product');
                $('#product-search').val(selectedProduct.name);
                $('#product-suggestions').empty().hide();
            });

            $('#add-product-btn').on('click', function () {
                if (!selectedProduct) {
                    alert('Please select a product from the search results.');
                    return;
                }

                let quantity = parseInt($('#product-quantity').val());

                if (quantity > selectedProduct.stock) {
                    alert('Insufficient stock. Available: ' + selectedProduct.stock);
                    return;
                }

                if ($('#order-items-table tr[data-product-id="' + selectedProduct.id + '"]').length > 0) {
                    alert('Product is already in the order.');
                    return;
                }

                let template = $('#order-item-template').prop('content');
                let newRow = $(template).clone();

                newRow.find('tr').attr('data-product-id', selectedProduct.id);
                newRow.find('td[data-label="Product"]').text(selectedProduct.name);
                newRow.find('td[data-label="Quantity"]').text(quantity);
                newRow.find('td[data-label="Unit Price"]').text(selectedProduct.price.toFixed(2));
                newRow.find('td[data-label="Subtotal"]').text((selectedProduct.price * quantity).toFixed(2));

                $('#order-items-table').append(newRow);
                updateTotal();

                selectedProduct = null;
                $('#product-search').val('');
                $('#product-quantity').val(1);
            });

            $(document).on('click', '.remove-item-btn', function () {
                $(this).closest('tr').remove();
                updateTotal();
            });

            function updateTotal() {
                let total = 0;
                $('#order-items-table tr').each(function () {
                    let quantity = parseInt($(this).find('td[data-label="Quantity"]').text());
                    let price = parseFloat($(this).find('td[data-label="Unit Price"]').text());
                    total += quantity * price;
                });
                $('#order-total').text('R$ ' + total.toFixed(2));
            }

            $('#create-order-form').on('submit', function (e) {
                e.preventDefault();

                let items = [];
                $('#order-items-table tr').each(function () {
                    items.push({
                        ProductId: $(this).data('product-id'),
                        Quantity: parseInt($(this).find('td[data-label="Quantity"]').text()),
                        UnitPrice: parseFloat($(this).find('td[data-label="Unit Price"]').text())
                    });
                });

                if (items.length === 0) {
                    alert('An order must have at least one item.');
                    return;
                }

                let orderData = {
                    clientId: $('#ClientId').val(),
                    items: items
                };

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Create")',
                    contentType: 'application/json',
                    data: JSON.stringify(orderData),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if(response.success) {
                            alert('Order created successfully!');
                            window.location.href = response.redirectUrl;
                        }
                    },
                    error: function(xhr) {
                        alert('Error creating order: ' + xhr.responseText);
                    }
                });
            });
        });
    </script>
}